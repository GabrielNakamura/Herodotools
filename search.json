[{"path":"https://gabrielnakamura.github.io/Herodotools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Gabriel Nakamura Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"reading-data-and-libraries","dir":"Articles","previous_headings":"","what":"Reading data and libraries","title":"Calculating in situ diversification and historical dispersal","text":"First, let’s read libraries use explore data produce figures. packages already installed, installed using following code. two packages CRAN (daee BioGeoBEARS) required run analysis vignette. suggest installing reading packages Github using following code: Now need read files corresponding distribution species assemblages 1x1 cell degrees, phylogenetic relationship used downstream analysis Herodotools","code":"libs <- c(\"ape\", \"picante\", \"dplyr\", \"tidyr\", \"purrr\",           \"raster\", \"terra\", \"ggplot2\", \"stringr\",           \"here\", \"sf\", \"rnaturalearth\", \"rcartocolor\", \"patchwork\") if (!requireNamespace(libs, quietly = TRUE)){     install.packages(libs)   } if (!requireNamespace(c(\"daee\",\"BioGeoBEARS\"), quietly = TRUE)){   devtools::install_github(\"vanderleidebastiani/daee\")   devtools::install_github(\"nmatzke/BioGeoBEARS\") } library(daee) library(BioGeoBEARS) library(Herodotools) data(\"akodon_sites\") data(\"akodon_newick\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"processing","dir":"Articles","previous_headings":"","what":"Data processing","title":"Calculating in situ diversification and historical dispersal","text":"perform data processing order get spatial occurrence information Checking species names occurrence matrix phylogenetic tree matching","code":"site_xy <- akodon_sites %>%    dplyr::select(LONG, LAT)   akodon_pa <- akodon_sites %>%    dplyr::select(-LONG, -LAT) spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree]"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"exploring-spatial-patterns","dir":"Articles","previous_headings":"","what":"Exploring spatial patterns","title":"Calculating in situ diversification and historical dispersal","text":"plot richness pattern Akodon genus. use ggplot2 package produce maps Figure 1 - Species richness Akodon genus South America","code":"library(ggplot2) coastline <- rnaturalearth::ne_coastline(returnclass = \"sf\") map_limits <- list(   x = c(-95, -30),   y = c(-55, 12) )  richness <- rowSums(akodon_pa_tree)  map_richness <-  dplyr::bind_cols(site_xy, richness = richness) %>%    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = richness)) +    rcartocolor::scale_fill_carto_c(name = \"Richness\", type = \"quantitative\", palette = \"SunsetDark\") +   ggplot2::geom_sf(data = coastline) +   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +   ggplot2::ggtitle(\"\") +   ggplot2::xlab(\"Longitude\") +   ggplot2::ylab(\"Latitude\") +   ggplot2::labs(fill = \"Richness\") +   ggplot2::theme_bw() +   ggplot2::theme(         plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),         legend.text = element_text(size = 12),          axis.text = element_text(size = 7),         axis.title.x = element_text(size = 11),         axis.title.y = element_text(size = 11)         )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"reading-classification-from-evoregion-analysis","dir":"Articles","previous_headings":"","what":"Reading classification from evoregion analysis","title":"Calculating in situ diversification and historical dispersal","text":"facilitate demonstration, use pre-computed classification evoregion analysis. transform evoregion results spatial object order visualize map regions. can done using following code: Evoregions can mapped using following code Figure 2 - Evoregions Akodon species communities Ancestral area reconstruction follow evoregion classification.","code":"evoregion_df <- data.frame(   site_xy,    site_region )  r_evoregion <- terra::rast(evoregion_df)  # Converting evoregion to a spatial polygon data frame, so it can be plotted sf_evoregion <- terra::as.polygons(r_evoregion) %>%    sf::st_as_sf()   # Downloading coastline continents and croping to keep only South America coastline <- rnaturalearth::ne_coastline(returnclass = \"sf\") map_limits <- list(   x = c(-95, -30),   y = c(-55, 12) )  # Assigning the same projection to both spatial objects sf::st_crs(sf_evoregion) <- sf::st_crs(coastline)  # Colours to plot evoregions col_five_hues <- c(   \"#3d291a\",   \"#a9344f\",   \"#578a5b\",   \"#83a6c4\",   \"#fcc573\" ) map_evoregion <-    evoregion_df %>%    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = site_region)) +    ggplot2::scale_fill_manual(     name = \"\",      labels = LETTERS[1:5],     values = rev(col_five_hues)   ) +   ggplot2::geom_sf(data = coastline) +   ggplot2::geom_sf(     data = sf_evoregion,      color = \"#040400\",     fill = NA,      size = 0.2) +   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +   ggplot2::ggtitle(\"\") +    ggplot2::theme_bw() +   ggplot2::xlab(\"Longitude\") +   ggplot2::ylab(\"Latitude\") +   ggplot2::theme(         legend.position = \"bottom\",         plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),         legend.text = element_text(size = 12),          axis.text = element_text(size = 7),         axis.title.x = element_text(size = 11),         axis.title.y = element_text(size = 11)         )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"mergeMacroAssemblage","dir":"Articles","previous_headings":"","what":"Ancestral area reconstruction for Akodon species and in situ diversification metrics","title":"Calculating in situ diversification and historical dispersal","text":"section show Herodotools can get results coming macroevolutionary analysis, particularly, analysis ancestral state reconstruction, understand role diversification historical dispersal assemblage level. use ancestral area reconstruction performed BioGeoBEARS, tool commonly used macroevolution. First, assign occurrence species evoregions. can use function get_region_occ obtain data frame species lines evoregions columns. object created last step can used auxiliary function Herodotools easily obtain Phyllip file required run analysis ancestral area reconstruction using BioGeoBEARS. Since take time run BioGeoBEARS (15 minutes 4GB processor machine), showing perform analysis BioGeoBEARSwe focus , can just read output ancestral analysis reconstruction performed using DEC model reconstruct evoregions. want check code used run BioGeoBEARS models, can access file.edit(system.file(\"extdata\", \"script\", \"e_01_run_DEC_model.R\", package = \"Herodotools\")). Reading file containing results DEC model reconstruction: worth note procedures described can adapted work model ancestral area reconstruction BioGeoBEARS (DEC), sake simplicity decided use DEC model.","code":"a_region <- Herodotools::get_region_occ(comm = akodon_pa_tree, site.region = site_region) # save phyllip file Herodotools::get_tipranges_to_BioGeoBEARS(   a_region,    # please set a new path to save the file   filename = here::here(\"inst\", \"extdata\", \"geo_area_akodon.data\"),   areanames = NULL   ) #> Warning in Herodotools::get_tipranges_to_BioGeoBEARS(a_region, filename = here::here(\"inst\", :  #> Note: assigning 'A B C D E' as area names. #> [1] \"/home/runner/work/Herodotools/Herodotools/inst/extdata/geo_area_akodon.data\" # ancestral reconstruction load(file = system.file(\"extdata\", \"resDEC_akodon.RData\", package = \"Herodotools\"))"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"modelBasedMetrics","dir":"Articles","previous_headings":"","what":"Merging macroevolutionary models with assemblage level metrics","title":"Calculating in situ diversification and historical dispersal","text":"data present-day occurrence species, biogeographical regionalization (obtained evoregions function) ancestral area reconstruction, can integrate information calculate metrics implemented Herodotools represent historical variables assemblage scale.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"age-of-assemblages","dir":"Articles","previous_headings":"Merging macroevolutionary models with assemblage level metrics","what":"Age of assemblages","title":"Calculating in situ diversification and historical dispersal","text":"Let’s start calculating age cell considering macroevolutionary dynamics -situ diversification time . age corresponds mean arrival time species occupying given assemblage. arrival time mean time ancestor arrived stablished (dispersal events ) assemblage within region current species occur today. original description metric see Van Dijk et al. 2021 function calc_age_arrival returns object containing mean age assemblage. Species transition current region occurred last ancestor present can dealt two ways: default represent age recent arrival age species. Another option attribute age corresponding half branch length connecting ancestor present time. adopted first option. mean age assemblage can map ages assemblages Figure 4 - Age assemblages","code":"# converting numbers to character biogeo_area <- data.frame(biogeo = chartr(\"12345\", \"ABCDE\", evoregion_df$site_region))   # getting the ancestral range area for each node  node_area <-    Herodotools::get_node_range_BioGeoBEARS(     resDEC,     phyllip.file = here::here(\"inst\", \"extdata\", \"geo_area_akodon.data\"),     akodon_newick,     max.range.size = 4    )  # calculating age arrival  age_comm <- Herodotools::calc_age_arrival(W = akodon_pa_tree,                          tree = akodon_newick,                          ancestral.area = node_area,                          biogeo = biogeo_area) sites <- dplyr::bind_cols(site_xy, site_region =  site_region, age = age_comm$mean_age_per_assemblage)  map_age <-    sites %>%    ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = mean_age_arrival)) +    rcartocolor::scale_fill_carto_c(type = \"quantitative\",                       palette = \"SunsetDark\",                      direction = 1,                       limits = c(0, 3.5),  ## max percent overall                      breaks = seq(0, 3.5, by = .5),                      labels = glue::glue(\"{seq(0, 3.5, by = 0.5)}\")) +   ggplot2::geom_sf(data = coastline, size = 0.4) +   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +   ggplot2::ggtitle(\"\") +    ggplot2::theme_bw() +   ggplot2::labs(fill = \"Mean age (Myr)\") +   ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +   ggplot2::theme(         legend.position = \"bottom\",         plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),         legend.text = element_text(size = 9),          axis.text = element_text(size = 8),         axis.title.x = element_text(size = 8),         axis.title.y = element_text(size = 8),         plot.subtitle = element_text(hjust = 0.5)         )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"phylomodelmetrics","dir":"Articles","previous_headings":"Merging macroevolutionary models with assemblage level metrics","what":"In-situ diversification metrics","title":"Calculating in situ diversification and historical dispersal","text":"can also calculate measures diversification considering macroevolutionary dynamics ancestors. Specifically, can measure importance -situ diversification assemblage level diversification metrics. new measures allows decompose effects two macroevolutionary process: -situ diversification ex situ. illustrate calculating common tip-based diversification measure proposed Jetz et al. (2012) consists inverse equal-splits measure (Redding Mooers, 2006) called Diversification Rate (DR). modified original DR metric take account portion evolutionary history associated region species currently occupy coloniztion establishment (dispersal events present). value represent diversification occurred due -situ diversification process, call -situ diversification metric. result calc_insitu_diversification function consist named list containing following elements: jetz_site_sp: Site--species matrix DR diversification rates. jetz_comm_mean: Harmonic mean DR diversification rates per site. insitu_site_sp: Site--species matrix diversification rates. insitu_comm_mean: Harmonic mean diversification rates per site (ignoring zeros specified). prop_site_sp: Site--species matrix proportional diversification rates. prop_comm_mean: Arithmetic mean proportional diversification rates per site. Figure 5 - Diversification rates (DR - ) -situ diversification (-situ diversification - B) Akodon assemblages","code":"akodon_diversification <-    Herodotools::calc_insitu_diversification(W = akodon_pa_tree,                                            tree = akodon_newick,                                             ancestral.area = node_area,                                             biogeo = biogeo_area,                                             type = \"equal.splits\") sites <- dplyr::bind_cols(site_xy,                    site_region =  site_region,                    age = age_comm$mean_age_per_assemblage,                    diversification_model_based = akodon_diversification$insitu_comm_mean,                    diversification = akodon_diversification$jetz_comm_mean)  map_diversification <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = diversification)) +     rcartocolor::scale_fill_carto_c(type = \"quantitative\", palette = \"SunsetDark\") +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"A\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"DR\") +     ggplot2::guides(fill = guide_colorbar(barheight = unit(3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +    ggplot2::theme(      legend.position = \"bottom\",      axis.title = element_blank(),      axis.text = element_text(size = 6)    )  map_diversification_insitu <-    sites %>%    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = diversification_model_based)) +    rcartocolor::scale_fill_carto_c(type = \"quantitative\",                      palette = \"SunsetDark\",                       direction = 1,                       limits = c(0, 1),  ## max percent overall                      breaks = seq(0, 1, by = .25),                      labels = glue::glue(\"{seq(0, 1, by = 0.25)}\")) +   ggplot2::geom_sf(data = coastline, size = 0.4) +   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +   ggplot2::ggtitle(\"B\") +    ggplot2::theme_bw() +   ggplot2::labs(fill = \"In situ diversification\") +   ggplot2::guides(fill = guide_colorbar(barheight = unit(3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +   ggplot2::theme(     legend.position = \"bottom\",     axis.title = element_blank(),     legend.text = element_text(size = 6),      axis.text = element_text(size = 8),     plot.subtitle = element_text(hjust = 0.5)   )  library(patchwork) # using patchwork to put the maps together map_diversification_complete <- map_diversification + map_diversification_insitu"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"historical-dispersal-events","dir":"Articles","previous_headings":"Merging macroevolutionary models with assemblage level metrics","what":"Historical dispersal events","title":"Calculating in situ diversification and historical dispersal","text":"can also calculate importance dispersal events. using function calc_dispersal_from can quantify contribution given region historical dispersal species present-day assemblages. done calculating proportion species assemblage dispersed focal ancestral range regions. calculation accounts species present events dispersal ancestral lineage, words, species presented whole history within single area considered analysis. also can map contribution dispersal regions. Note focal area ancestral range map values dipersal metric, since source dispersal regions. Figure 6 - Maps showing regionalization based phylogenetic turnover (evoregion - top figure), contribution regions , B D regions regarding historical dispersal lineages","code":"akodon_dispersal <-  Herodotools::calc_dispersal_from(W = akodon_pa_tree,                tree = akodon_newick,                 ancestral.area = node_area,                 biogeo = biogeo_area) sites <- dplyr::bind_cols(site_xy,                    site_region =  site_region,                     age = age_comm$mean_age_per_assemblage,                    diversification = akodon_diversification$Jetz_harmonic_mean_site,                    diversification_model_based = akodon_diversification$insitu_Jetz_harmonic_mean_site,                    dispersal.D = akodon_dispersal[,1],                     dispersal.A = akodon_dispersal[, 2],                    dispersal.E = akodon_dispersal[, 3],                    dispersal.BD = akodon_dispersal[, 4],                    dispersal.B = akodon_dispersal[, 5])  map_dispersal_D <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = dispersal.D)) +        rcartocolor::scale_fill_carto_c(       type = \"quantitative\", palette = \"SunsetDark\", na.value = \"white\", limits = c(0,1)      ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"From D\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"% of contribution\") +     ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +    ggplot2::theme(     legend.position = \"bottom\",     axis.title = element_blank(),     legend.text = element_text(size = 6),      axis.text = element_text(size = 3),     plot.subtitle = element_text(hjust = 0.5)   )  map_dispersal_A <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = dispersal.A)) +        rcartocolor::scale_fill_carto_c(      type = \"quantitative\", palette = \"SunsetDark\", na.value = \"white\", limits = c(0,1)      ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"From A\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"% of contribution\") +    ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +    ggplot2::theme(     legend.position = \"bottom\",     axis.title = element_blank(),     legend.text = element_text(size = 6),      axis.text = element_text(size = 3),     plot.subtitle = element_text(hjust = 0.5)   )  map_dispersal_B <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = dispersal.B)) +    rcartocolor::scale_fill_carto_c(      type = \"quantitative\", palette = \"SunsetDark\", na.value = \"white\", limits = c(0,1)      ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"From B\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"% of\\ncontribution\") +    ggplot2::theme(      legend.position = \"right\",      axis.title = element_blank(),      legend.text = element_text(size = 6),       axis.text = element_text(size = 3),      plot.subtitle = element_text(hjust = 0.5)       )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/Intro_calc_insitu_dispersal.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Calculating in situ diversification and historical dispersal","text":"Duarte, L. D. S., Debastiani, V. J., Freitas, . V. L., & Pillar, V. D. P. (2016). Dissecting phylogenetic fuzzy weighting: theory application metacommunity phylogenetics. Methods Ecology Evolution, February, 937-946. doi.org/10.1111/2041-210X.12547 Jombart, T., Devillar S., & Ballox, F. (2010). Discriminant analysis principal components: new method analysis genetically structured populations. BMC Genomic Data. Luza, . L., Maestri, R., Debastiani, V. J., Patterson, B. D., Maria, S., & Leandro, H. (2021). evolution faster ecotones? test using rates tempo diet transitions Neotropical Sigmodontinae ( Rodentia , Cricetidae ). Ecology Evolution, December, 18676–18690. https://doi.org/10.1002/ece3.8476 Maestri, R., & Duarte, L. D. S. (2020). Evoregions: Mapping shifts phylogenetic turnover across biogeographic regions Renan Maestri. Methods Ecology Evolution, 2020(August), 1652–1662. https://doi.org/10.1111/2041-210X.13492 Pigot, . Etienne, R. (2015). new dynamic null model phylogenetic community structure. Ecology Letters, 18(2), 153-163. https://doi.org/10.1111/ele.12395 Van Dijk, ., Nakamura, G., Rodrigues, . V., Maestri, R., & Duarte, L. (2021b). Imprints tropical niche conservatism historical dispersal radiation Tyrannidae (Aves: Passeriformes). Biological Journal Linnean Society, 134(1), 57–67. https://doi.org/10.1093/biolinnean/blab079","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"akodon-data","dir":"Articles","previous_headings":"","what":"Akodon data","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"use data genus Akodon exemplify workflow. article Using Herodotools analyses historical biogeography, defined evolutionary regions, estimated biogeographical ancestral area. use data go run BSM. BSM results, walk thought steps get calculate assemblage metrics situ diversification, age arrival, Phylogenetic Endemism Phylogenetic Diversity, well historical dispersal events assemblage level perspective.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"run-biogeographical-stochastic-mapping","dir":"Articles","previous_headings":"","what":"Run Biogeographical Stochastic Mapping","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"calculate Stochastic Mapping need Biogeographical Model, model parameters extracted. need inform also, path phylogenetic tree phyllip file used biogeographical model. , number stochastic mappings want simulate. example using small set, 10 maps. calc_bsm()wrapping function therunBSM() BioGeoBEARS. output function list containing simulated mappings. two elements, one cladogentic anagenetic events.","code":"# load the package ------------------------------------------------------------- library(Herodotools) library(rnaturalearth) library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE library(rcartocolor) library(ggplot2)   # load the data ----------------------------------------------------------------  # phylogeny data(\"akodon_newick\")  # Assemblages data(\"akodon_sites\")  # Biogeographical Model (DEC) data(\"resDEC\")    # Paths to tree and geography files tree_path <- system.file(\"extdata\", \"akodon.new\", package = \"Herodotools\") phyllip_path <- system.file(\"extdata\", \"geo_area_akodon.data\", package = \"Herodotools\") # calc_bsm ---------------------------------------------------------------------  bsm_result <- calc_bsm(    BioGeoBEARS.data = resDEC,    phyllip.file = phyllip_path,    tree.path = tree_path,    max.maps = 50,    n.maps.goal = 10,    seed = 1234  )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"prepare-phylogeny-for-herodotoolss-functions","dir":"Articles","previous_headings":"","what":"Prepare phylogeny for {Herodotools}’s functions","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"functions Herodotools designed map node phylogeny track changes range form tip root phylogeny. able track changes using BSM add new nodes phylogeny. new nodes non-bifurcating nodes represents change range area state. change due anagenesis, use event time place daughter branch. cladogenesis source, add daughter branch, close parent node (1e-20). two steps additions, first need create data frame node insertions node area (insertions). using functions get_insert_df() get_bsm_node_area(). used insert_nodes() insert nodes phylogeny. insert_nodes() functions return list two elements stochastic map: - $phylo: phylogenetic tree added non-bifurcating nodes - $node_area: data frame node area added node. argument node_area NULL, node area included data frame. Note phylogenies BSM output different number internal nodes. Also note internal nodes tips, means non-bifurcating nodes (singleton nodes).","code":"# prepare the insertions ------------------------------------------------------- ## get_insert_df ----  insert_list <- get_insert_df(    bsm_result,    phyllip.file = phyllip_path,    max.range.size = resDEC$inputs$max_range_size    )  ## get_bsm_node_area ----  node_area_list <- get_bsm_node_area(   bsm = bsm_result,    BioGeoBEARS.data = resDEC,   phyllip.file = phyllip_path,   tree.path = tree_path,   max.range.size = resDEC$inputs$max_range_size) # insert_nodes -----------------------------------------------------------------  bsm_tree <- insert_nodes(   tree = akodon_newick,    inserts = insert_list,    node_area = node_area_list) #> Warning: `aes_()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()` #> ℹ The deprecated feature was likely used in the ggtree package. #>   Please report the issue at <https://github.com/YuLab-SMU/ggtree/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> Warning in fortify(data, ...): Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? #> Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? bsm_tree[[1]]$phylo #>  #> Phylogenetic tree with 30 tips and 52 internal nodes. #>  #> Tip labels: #>   A_mimus, A_lindberghi, A_subfuscus, A_lutescens, A_sylvanus, A_boliviensis, ... #> Node labels: #>   N31, N32, N33, N34, N35, N36, ... #>  #> Rooted; includes branch length(s). bsm_tree[[10]]$phylo #>  #> Phylogenetic tree with 30 tips and 48 internal nodes. #>  #> Tip labels: #>   A_mimus, A_lindberghi, A_subfuscus, A_lutescens, A_sylvanus, A_boliviensis, ... #> Node labels: #>   N31, N32, N33, N34, N35, N36, ... #>  #> Rooted; includes branch length(s)."},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"run-herodotools-analyses","dir":"Articles","previous_headings":"","what":"Run {Herodotools} analyses","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"Now, going calculate metrics {Herodotools}. , let’s prepare data. going separate coordinates presence-absence data akodon_sites. load evoregions sites.","code":"# separate coords from presence-absence  site_xy <- akodon_sites %>%    dplyr::select(LONG, LAT)   akodon_pa <- akodon_sites %>%    dplyr::select(-LONG, -LAT)  # filter data in communities based on the species in the phylogeny spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree]   # load evoregion and prepare data  evoreg_path <- system.file(\"extdata\", \"regions_results.RData\", package = \"Herodotools\")  # load 'regions' object load(file = evoreg_path) site_region <- regions$Cluster_Evoregions evoregion_df <- data.frame(site_xy, site_region)   # for visualization  coastline <- rnaturalearth::ne_coastline(returnclass = \"sf\") map_limits <- list(   x = c(-95, -30),   y = c(-55, 12) )"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"age-of-arrival","dir":"Articles","previous_headings":"Run {Herodotools} analyses","what":"Age of arrival","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"","code":"biogeo_area <- data.frame(biogeo = chartr(\"12345\", \"ABCDE\", evoregion_df$site_region))   # calculating age arrival  l_age_comm <- lapply(bsm_tree, function(bsm_map){      tree <- bsm_map$phylo   #tree$node.label <- NULL   anc_area <- bsm_map$node_area %>% as.matrix()      Herodotools::calc_age_arrival(W = akodon_pa_tree,                                  tree = tree,                                  ancestral.area = anc_area,                                  biogeo = biogeo_area)     })  # Organize results age_bsm_mtx <- sapply(   l_age_comm,    function(x) x$mean_age_per_assemblage$mean_age_arrival   )  # summarize results  bsm_metrics <- cbind(   evoregion_df,    age_bsm_mean = rowMeans(age_bsm_mtx),   age_bsm_sd = apply(age_bsm_mtx, 1, sd) ) # Visualization    # create a theme  theme_htools <- list(   ggplot2::geom_sf(data = coastline, size = 0.4),   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y),   ggplot2::ggtitle(\"\"),   ggplot2::theme_bw(),   ggplot2::guides(fill = ggplot2::guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                           direction = \"horizontal\",                                         ticks.colour = \"grey20\",                                         title.position = \"top\",                                         label.position = \"bottom\",                                         title.hjust = 0.5)),   ggplot2::theme(     legend.position = \"bottom\",     plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),     legend.text = element_text(size = 9),      axis.text = element_text(size = 8),     axis.title.x = element_text(size = 8),     axis.title.y = element_text(size = 8),     plot.subtitle = element_text(hjust = 0.5)   ) )  bsm_metrics %>%    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = age_bsm_mean)) +    rcartocolor::scale_fill_carto_c(type = \"quantitative\",                                    palette = \"SunsetDark\",                                   direction = 1) +   ggplot2::labs(fill = \"Mean age (Myr)\") +   theme_htools bsm_metrics %>%    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = age_bsm_sd)) +    rcartocolor::scale_fill_carto_c(type = \"quantitative\",                                    palette = \"BrwnYl\",                                   direction = 1) +   ggplot2::labs(fill = \"SD age (Myr)\") +   theme_htools"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/bsm_analysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References:","title":"Using Biogeographical Stochastic Mapping on Herodotools","text":"Dupin, J., Matzke, N. J., Särkinen, T., Knapp, S., Olmstead, R. G., Bohs, L., & Smith, S. D. (2017). Bayesian estimation global biogeographical history Solanaceae. Journal Biogeography, 44(4), 887–899. https://doi.org/10.1111/jbi.12898","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/building-evoregions.html","id":"setclust","dir":"Articles","previous_headings":"","what":"Setting the maximum number of clusters","title":"Computing evoregions analysis","text":"evoregion workflow, defining maximum number clusters tested key step. particularly important find.clusters() function {adegenet} package sensitive parameter: different values maximum number clusters may lead different group assignments. purpose find_max_nclust() function {Herodotools} identify maximum number clusters produces stable grouping solution. , function runs find.clusters() multiple times across range maximum cluster values evaluates consistency resulting solutions. Stability assessed computing correlation clustering results across runs, combined different tolerance values confidence.level argument. optimal maximum number clusters one maximizes correlation, serving proxy stability evoregion solution. tutorial, use example data provided {Herodotools} package. akodon_site dataset represents occurrence species across assemblages mapped 1° × 1° grid cells. akodon_newick object contains phylogenetic tree (Newick format) describing evolutionary relationships among species tribe Akodontini. First, need compute Principal Component Phylogenetic Structure (PCPS) matrix, used input find_max_nclust() function. can done using pcps() function {PCPS} package. Now can estimate optimal maximum number groups using find_max_nclust() function implemented {Herodotools}. function supports parallel computation via {future} package. recomend set parallel backend using future::plan() first. , run find_max_clust function matrix summarizes results analysis stability cluster computation different values maximum number groups. row corresponds tested number groups contains associated confidence level. confidence level represents proportion correlation values equal greater threshold evaluated. Values closer 1 indicate higher stability clustering solution number groups specified confidence level. words, values approaching 1 suggest given number groups yields consistent reliable cluster structures. example, maximum number groups yields stable solution 3. Therefore, use value evoregion() computation follows.","code":"library(Herodotools) data(\"akodon_sites\") data(\"akodon_newick\")  # minor data processing   site_xy <- akodon_sites  |>     dplyr::select(LONG, LAT)   akodon_pa <- akodon_sites |>    dplyr::select(-LONG, -LAT)  spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree] pcps_bray <-   PCPS::pcps(akodon_pa_tree, phylodist = cophenetic(akodon_newick), method = \"bray\")  values_bray <- pcps_bray$values # PCPS eigenvalues, relative eigenvalues and cumulative relative eigenvalues  # Define a threshold value for eigenvectors (eigenvectors containing more than 5% of variation) thresh_bray <- max(which(values_bray[, 2] >= 0.05)) vec_bray <- pcps_bray$vectors # eigenvectors # setting function to work in parallel according to user settings library(future) library(progressr)  # Detect safe max cores ncores <- future::availableCores()  # dynamic safety_margin <- 1 workers <- max(1, ncores - safety_margin)  plan(multisession, workers = workers) this  future::plan(sequential) handlers(global = TRUE) handlers(\"txtprogressbar\")   # terminal progress bar + timing info matrix_optimal_maxclust <-    find_max_nclust(x = vec_bray,                   threshold = thresh_bray,                    max.nclust = c(3, 4, 5, 7, 9, 10),                   nperm = 300,                    method = \"kmeans\",                    stat = \"BIC\",                    criterion = \"diffNgroup\",                   subset = 100,                   confidence.level = c(0.7, 0.8, 0.9, 0.95, 0.99)) #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\". #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\". #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\". #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\". #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\". #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: did not converge in 100000 iterations #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: Quick-TRANSfer stage steps exceeded maximum (= 36600) #> Warning: UNRELIABLE VALUE: One of the 'future.apply' iterations #> ('future_lapply-1') unexpectedly generated random numbers without declaring so. #> There is a risk that those random numbers are not statistically sound and the #> overall results might be invalid. To fix this, specify 'future.seed=TRUE'. This #> ensures that proper, parallel-safe random numbers are produced via a parallel #> RNG method. To disable this check, use 'future.seed = NULL', or set option #> 'future.rng.onMisuse' to \"ignore\"."},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/building-evoregions.html","id":"evoregion","dir":"Articles","previous_headings":"","what":"Computing evoregions","title":"Computing evoregions analysis","text":"use function calc_evoregion, originally described Maestri Duarte (2020) implemented {Herodotools} package. classification method performs biogeographical regionalization based phylogenetic fuzzy matrix, combined Discriminant Analysis Principal Components (DAPC) using k-means clustering. Evoregions represent areas correspond centers lineage diversification, reflecting historical evolutionary radiations within clades (Maestri & Duarte, 2020). compute evoregions, user must provide species occurrence matrix phylogenetic tree. max.n.clust specified, evoregion() function automatically selects maximum number clusters using “elbow” method, implemented {phyloregion} package (https://besjournals.onlinelibrary.wiley.com/doi/epdf/10.1111/2041-210X.13478). However, strongly recommend using find_max_nclust() function determine maximum number clusters, demonstrated previous section. approach identifies stable clustering solution therefore aligned methodological rationale evoregion framework. seed argument ensures reproducibility: analysis repeated data argument settings, numerical labels assigned groups. Without setting seed, group labels (.e., cluster numbers) may differ across runs even grouping structure remains . , set max.n.clust = 3, based result obtained previous step. can plot regions map Finally, plotting evoregions map output evoregion() indicates presence two distinct regions. However, cells share degree affiliation region assigned. Cells high affiliation values represent assemblages highly similar cells within region. Conversely, cells low affiliation values correspond areas high turnover, , areas multiple colonization events different lineages occurred (Maestri & Duarte, 2020). can calculate affiliation cell corresponding region function calc_affiliation_evoreg Now can map evoregions along degree affiliation cell. affiliation values represented intensity colors: cells high affiliation appear strong, saturated colors, cells low affiliation shown faded colors. words, faded cell’s color, weaker affiliation assigned evoregion.","code":"regions <-    Herodotools::calc_evoregions(   comm = akodon_pa_tree,   phy = akodon_newick,    seed = 100, max.n.clust = 3   )  site_region <- regions$cluster_evoregions # this is the classification result for each site evoregion_df <- data.frame(   site_xy,    site_region )  r_evoregion <- terra::rast(evoregion_df)  # Converting evoregion to a spatial polygon data frame, so it can be plotted sf_evoregion <- terra::as.polygons(r_evoregion) |>    sf::st_as_sf()   # Downloading coastline continents and croping to keep only South America coastline <- rnaturalearth::ne_coastline(returnclass = \"sf\") map_limits <- list(   x = c(-95, -30),   y = c(-55, 12) )  # Assigning the same projection to both spatial objects sf::st_crs(sf_evoregion) <- sf::st_crs(coastline)  # Colours to plot evoregions col_two_hues <- c(   \"#3d291a\",   \"#fcc573\" ) library(ggplot2) map_evoregion <-    evoregion_df |>    ggplot2::ggplot() +    ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = site_region)) +    ggplot2::scale_fill_manual(     name = \"\",      labels = LETTERS[1:5],     values = rev(col_two_hues)   ) +   ggplot2::geom_sf(data = coastline) +   ggplot2::geom_sf(     data = sf_evoregion,      color = \"#040400\",     fill = NA,      size = 0.2) +   ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +   ggplot2::ggtitle(\"\") +    ggplot2::theme_bw() +   ggplot2::xlab(\"Longitude\") +   ggplot2::ylab(\"Latitude\") +   ggplot2::theme(         legend.position = \"bottom\",         plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),         legend.text = element_text(size = 12),          axis.text = element_text(size = 7),         axis.title.x = element_text(size = 11),         axis.title.y = element_text(size = 11)         )  map_evoregion # distance matrix using 4 significant PCPS axis accordingly to the 5% threshold  dist_phylo_PCPS <- vegan::vegdist(vec_bray[, 1:thresh_bray], method = \"euclidean\")  # calculating affiliation values for each assemblage  afi <- calc_affiliation_evoreg(phylo.comp.dist = dist_phylo_PCPS,                           groups = site_region)   # binding the information in a data frame sites <- dplyr::bind_cols(site_xy, site_region =  site_region, afi) map_joint_evoregion_afilliation <-     evoregion_df %>%     ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = site_region),                 alpha = sites[, \"afilliation\"]) +     ggplot2::scale_fill_manual(      name = \"\",       labels = LETTERS[1:2],      values = rev(col_two_hues)    ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::geom_sf(      data = sf_evoregion,       color = rev(col_two_hues),      fill = NA,       size = 0.7) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"\") +     guides(guide_legend(direction = \"vertical\")) +    ggplot2::theme_bw() +   ggplot2::xlab(\"Longitude\") +   ggplot2::ylab(\"Latitude\") +   ggplot2::theme(         legend.position = \"bottom\",         plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), \"mm\"),         legend.text = element_text(size = 10),          axis.text = element_text(size = 8),         axis.title.x = element_text(size = 10),         axis.title.y = element_text(size = 10)         ) #> Warning: Guides provided to `guides()` must be named. #> ℹ All guides are unnamed.  map_joint_evoregion_afilliation"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/community-phylogenetic-metrics.html","id":"phylomodelmetricscomm","dir":"Articles","previous_headings":"","what":"Community phylogetic metrics considering in-situ diversification","title":"community-phylogenetic-metrics","text":"also can calculate common metrics community phylogenetics considering -situ diversification dynamics. community phylogenetic metrics allows disentangle effects -situ diversification ex-situ similar way -situ diversification metric. Namely, PDin-situ PEin-situ, correspond modified versions classic Phylogenetic Diversity (PD) (Faith, 1998), PE (Rosauer, et al.2009), respectively. difference metrics considers amount phylogenetic diversity endemism emerged colonization establishment present day lineages assemblages. use function calc_insitu_metrics. First, assign occurrence species evoregions. can use function get_region_occ obtain data frame species lines evoregions columns. object created last step can used auxiliary function Herodotools easily obtain Phyllip file required run analysis ancestral area reconstruction using BioGeoBEARS. Since take time run BioGeoBEARS (15 minutes 4GB processor machine), showing perform analysis BioGeoBEARSwe focus , can just read output ancestral analysis reconstruction performed using DEC model reconstruct evoregions. want check code used run BioGeoBEARS models, can access file.edit(system.file(\"extdata\", \"script\", \"e_01_run_DEC_model.R\", package = \"Herodotools\")). Reading file containing results DEC model reconstruction: worth note procedures described can adapted work model ancestral area reconstruction BioGeoBEARS (DEC), sake simplicity decided use DEC model.","code":"a_region <- Herodotools::get_region_occ(comm = akodon_pa_tree, site.region = site_region) # save phyllip file Herodotools::get_tipranges_to_BioGeoBEARS(   a_region,    # please set a new path to save the file   filename = here::here(\"inst\", \"extdata\", \"geo_area_akodon.data\"),   areanames = NULL   ) # ancestral reconstruction load(file = system.file(\"extdata\", \"resDEC_akodon.RData\", package = \"Herodotools\"))"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/community-phylogenetic-metrics.html","id":"modelBasedMetrics","dir":"Articles","previous_headings":"","what":"Merging macroevolutionary models with assemblage level metrics","title":"community-phylogenetic-metrics","text":"data present-day occurrence species, biogeographical regionalization (obtained evoregions function) ancestral area reconstruction, can integrate information calculate metrics implemented Herodotools represent historical variables assemblage scale.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/community-phylogenetic-metrics.html","id":"age-of-assemblages","dir":"Articles","previous_headings":"Merging macroevolutionary models with assemblage level metrics","what":"Age of assemblages","title":"community-phylogenetic-metrics","text":"Let’s start calculating age cell considering macroevolutionary dynamics -situ diversification time . age corresponds mean arrival time species occupying given assemblage. arrival time mean time ancestor arrived stablished (dispersal events ) assemblage within region current species occur today. original description metric see Van Dijk et al. 2021 metrics can plot PDin-situ PEin-situ map. illustrate plotting PE PEin-situ metrics comparison. Figure 7 shows endemism pattern Akodon assemblages similar metrics, indicating regions high endemism mainly due situ diversification process.","code":"# converting numbers to character biogeo_area <- data.frame(biogeo = chartr(\"12345\", \"ABCDE\", evoregion_df$site_region))   # getting the ancestral range area for each node  node_area <-    Herodotools::get_node_range_BioGeoBEARS(     resDEC,     phyllip.file = here::here(\"inst\", \"extdata\", \"geo_area_akodon.data\"),     akodon_newick,     max.range.size = 4    )  # calculating age arrival  age_comm <- Herodotools::calc_age_arrival(W = akodon_pa_tree,                          tree = akodon_newick,                          ancestral.area = node_area,                          biogeo = biogeo_area) akodon_PD_PE_insitu <- calc_insitu_metrics(W = akodon_pa_tree,                   tree = akodon_newick,                    ancestral.area = node_area,                    biogeo = biogeo_area,                    PD = TRUE,                    PE = TRUE) sites <- dplyr::bind_cols(site_xy,                    site_region =  site_region,                     age = age_comm$mean_age_per_assemblage,                    diversification = akodon_diversification$Jetz_harmonic_mean_site,                    PE = akodon_PD_PE_insitu$PE,                     PEinsitu = akodon_PD_PE_insitu$PEinsitu,                    PD = akodon_PD_PE_insitu$PD,                    PDinsitu = akodon_PD_PE_insitu$PDinsitu)  map_PE <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = PE)) +     rcartocolor::scale_fill_carto_c(palette = \"SunsetDark\",                                    direction = 1,                                    limits = c(0, 0.6),  ## max percent overall                                   breaks = seq(0, 0.6, by = .1)                                   ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"A\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"PE\") +     ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +    ggplot2::theme(      legend.position = \"bottom\",      axis.title = element_blank(),      legend.text = element_text(size = 7)    )  map_PEinsitu <-     sites %>%     ggplot2::ggplot() +     ggplot2::geom_raster(ggplot2::aes(x = LONG, y = LAT, fill = PEinsitu)) +     rcartocolor::scale_fill_carto_c(palette = \"SunsetDark\",                                    direction = 1,                                    limits = c(0, 0.6),  ## max percent overall                                   breaks = seq(0, 0.6, by = .1)                                   ) +    ggplot2::geom_sf(data = coastline, size = 0.4) +    ggplot2::coord_sf(xlim = map_limits$x, ylim = map_limits$y) +    ggplot2::ggtitle(\"B\") +     ggplot2::theme_bw() +    ggplot2::labs(fill = \"PEinsitu\") +     ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                  direction = \"horizontal\",                                ticks.colour = \"grey20\",                                title.position = \"top\",                                label.position = \"bottom\",                                title.hjust = 0.5)) +    ggplot2::theme(      legend.position = \"bottom\",      axis.title = element_blank(),      legend.text = element_text(size = 7)    )  map_PE_all <- map_PE + map_PEinsitu"},{"path":"https://gabrielnakamura.github.io/Herodotools/articles/community-phylogenetic-metrics.html","id":"traitdynamics","dir":"Articles","previous_headings":"Merging macroevolutionary models with assemblage level metrics","what":"Tip-based metrics of trait evolution","title":"community-phylogenetic-metrics","text":"show implement three tip-based metrics proposed Luza et al. (2021). Note tip-based metrics estimated using stochastic mapping discrete/categorical traits (diet original publication), can extended traits show . three tip-based metrics Transition rates, Stasis time, Last transition time, implemented function calc_tip_based_trait_evo. Transition rates indicate many times ancestral character changed time. Stasis time indicates maximum branch length (time interval) current tip-character maintained across whole phylogeny. Finally, last transition time sum branch lengths tip prior/previous node reconstructed character equal current tip-character. original publication, use stochastic character mapping discrete trait data. time, however, reconstruct species foraging strata (Elton Traits’ database, Wilman et al. 2014). reconstruct foraging strata 214 sigmodontine rodent species trait phylogenetic data (consensus phylogeny Upham et al. 2019). First load trait phylogenetic data need run function calc_tip_based_trait_evo. Now calculate metrics. Since analysis can take several minutes can read result obtained using code Now estimates three tip-based metrics 214 rodent species. can summarize tip-based metrics assemblage scale. First load assemblage geographic data comprising 1770 grid cells located Neotropics. Now calculate values tip-based metrics species assemblage. Since last step take minutes complete can opt read directly package table mean values metrics represent space variation tip-based metrics rodent assemblages. seems , general, assemblages southern, western northeastern Neotropics species higher Transition Rates foraging strata communities elsewhere (.e., many species often changed foraging strata time). Assemblage-level Stasis Time high two groups assemblages: one northeastern Neotropics, another central Amazonia. first group particular also showed high Transition Rates. Taken together, results indicate , despite frequent changes foraging strata, species northeastern assemblages retained phenotipic state time species found elsewhere. Finally, Last Transition Time metric shows transitions leading present species foraging strata older ) north Amazonia ii) central Mexico. results potentially reflecting ) location arrival ancestral sigmodontine rodents south America, ii) occurrence several species closely related basal lineages.","code":"data(\"rodent_phylo\") data(\"trait\") # run `calc_tip_based_trait_evo` function  trans_rates <- Herodotools::calc_tip_based_trait_evo(tree = match_data$phy,                                    trait = trait , # need to be named to work                                    nsim = 50,                                    method = c(\"transition_rates\",                                               \"last_transition_time\",                                               \"stasis_time\")                                    ) load(system.file(\"extdata\", \"transition_rate_res.RData\", package = \"Herodotools\")) # load community data comm_data <- read.table(    system.file(\"extdata\", \"PresAbs_228sp_Neotropical_MainDataBase_Ordenado.txt\",                 package = \"Herodotools\"),    header = T, sep = \"\\t\"    )  # load latlong of these communities geo_data <- read.table(   system.file(\"extdata\", \"Lon-lat-Disparity.txt\", package = \"Herodotools\"),   header = T, sep = \"\\t\"   ) # transition rates for each community averaged_rates <- purrr::map_dfr(1:nrow(comm_data), function (i){   # across assemblages   purrr::map_dfr(trans_rates, function (sims) { # across simulations          # species in the assemblages     gather_names <- names(comm_data[i,][which(comm_data[i,]>0)]) # get the names     # subset of rates     rates <- sims[which(rownames (sims) %in% gather_names),                    c(\"prop.transitions\",                       \"stasis.time\",                      \"last.transition.time\")]     mean_rates <- apply(rates, 2, mean) # and calculate the average     mean_rates   }) %>%      purrr::map(mean) }) data(\"averaged_rates\") # prepare data to map data_to_map_wide <- data.frame(geo_data[,c(\"LONG\", \"LAT\")], averaged_rates)  data_to_map_long <-    data_to_map_wide %>%    tidyr::pivot_longer(     cols = 3:5,     names_to = \"variables\",     values_to = \"values\"   )  # create a list with the maps list_map_transitions <- lapply(unique(data_to_map_long$variables), function(metric){      plot.title <- switch(     metric,     \"prop.transitions\" = \"Transition Rates\",     \"stasis.time\" = \"Stasis Time\",     \"last.transition.time\" = \"Last Transition Time\"   )      sel_data <-      data_to_map_long %>%      dplyr::filter(variables == metric)      var_range <- range(sel_data$values) %>% round(2)   var_breaks <- seq(var_range[1], var_range[2], diff(var_range/4)) %>% round(2)      sig_map_limits <- list(     x = range(sel_data$LONG),      y = range(sel_data$LAT)   )      ggplot() +     ggplot2::geom_tile(data = sel_data,                  ggplot2::aes(x = LONG, y = LAT, fill = values)) +     rcartocolor::scale_fill_carto_c(       type = \"quantitative\",        palette = \"SunsetDark\",        na.value = \"white\",        limits = var_range,        breaks = var_breaks     )+      ggplot2::geom_sf(data = coastline, size = 0.4) +     ggplot2::coord_sf(xlim = sig_map_limits$x, ylim = sig_map_limits$y) +     ggplot2::theme_bw() +     ggplot2::guides(fill = guide_colorbar(barheight = unit(2.3, units = \"mm\"),                                    direction = \"horizontal\",                                  ticks.colour = \"grey20\",                                  title.position = \"top\",                                  label.position = \"bottom\",                                  title.hjust = 0.5)) +     ggplot2::labs(title = plot.title) +     ggplot2::theme(       legend.position = \"bottom\",       axis.title = element_blank(),       legend.title = element_blank(),       legend.text = element_text(size = 7),        axis.text = element_text(size = 7),       plot.subtitle = element_text(hjust = 0.5)        )    })  # Create map mapTransition_rate <- patchwork::wrap_plots(list_map_transitions) +   patchwork::plot_annotation(tag_levels = \"A\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Nakamura. Author, maintainer. Arthur Rodrigues. Author. André Luza. Author.            O-1134-2017 Vanderlei Debastiani. Author. Renan Maestri. Author. Leandro Duarte. Author.            B-6552-2012","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nakamura G, Rodrigues , Luza , Debastiani V, Maestri R, Duarte L (2025). Herodotools: Tools Historical Biogeography analysis. R package version 1.1.0, https://gabrielnakamura.github.io/Herodotools/.","code":"@Manual{,   title = {Herodotools: Tools for Historical Biogeography analysis},   author = {Gabriel Nakamura and Arthur Rodrigues and André Luza and Vanderlei Debastiani and Renan Maestri and Leandro Duarte},   year = {2025},   note = {R package version 1.1.0},   url = {https://gabrielnakamura.github.io/Herodotools/}, }"},{"path":[]},{"path":[]},{"path":"https://gabrielnakamura.github.io/Herodotools/index.html","id":"history-matters---some-context-on-package-name-and-aims","dir":"","previous_headings":"","what":"History matters - some context on package name and aims","title":"Tools for Historical Biogeography analysis","text":"Historical events affect daily lives many ways. never asked happen done something different past? Like classic movie Frank Capra ’s Wonderful Life, latter inspired book name great SJ Gould, changes past events shape present life dramatically. true natural world, history matters lot, species distribution ecological communities results present past events. Like ancient Greek historian geographer Herodotus, package aims put together tools allow us investigate role history systematically. However, instead narrating stories kings famous battles, hope help ecologists tell stories nature nature history shaping biodiversity. Disclosure: package logo inspired pen ink drawing Uruguayan artist Joaquín Torres Garcia called America Invertida. image closely related Garcia’s manifesto “School South,” defines : “School South’ , reality, north south. must north us, except opposition south. Therefore now turn map upside , true idea position, rest world wishes. point America, now , forever, insistently points south, north.” choose painting represent effort South American scientists trying figure north Biogeography studies.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/index.html","id":"the-package","dir":"","previous_headings":"","what":"The package","title":"Tools for Historical Biogeography analysis","text":"Herodotools R package allows us perform analysis investigate effects historical processes, specifically diversification historical dispersal, determining biodiversity structure assemblages biogeographical regions. achieved integrating tools macroevolutionary dynamics (e.g., ancestral area reconstruction, trait reconstruction) metrics commonly used community phylogenetics also providing new metrics integrate macroevolutionary dynamics assemblage biogeographical scales. functions presented Herodotools package used previous studies understand, example, imprints historical processes present day patterns diversity, macroecological patterns interplay effects ecological variation macroevolutionary dynamics general, Herodotools designed work unified platform analysis historical biogeography integrating methods Macroecology, Macroevolution Community Phylogenetics.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/index.html","id":"download","dir":"","previous_headings":"","what":"Download","title":"Tools for Historical Biogeography analysis","text":"install development version package user must type:","code":"if (!requireNamespace(\"devtools\", quietly = TRUE)){     install.packages(\"devtools\")   } devtools::install_github(\"GabrielNakamura/Herodotools\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for Historical Biogeography analysis","text":"details examples please visit Herodotools web page","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Tools for Historical Biogeography analysis","text":"Gabriel Nakamura, Arthur Rodrigues, André Luza, Renan Maestri, Vanderlei Debastiani Leandro Duarte","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/ada.html","id":null,"dir":"Reference","previous_headings":"","what":"Ancestral Diversity Analysis — ada","title":"Ancestral Diversity Analysis — ada","text":"function computes different assemblage level metrics using ancestral community reconstruction","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/ada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ancestral Diversity Analysis — ada","text":"","code":"ada(   x,   phy,   sp.bin = \"Sturges\",   marginal = FALSE,   lik.threshold = FALSE,   threshold = 0.7,   compute.fields = F )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/ada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ancestral Diversity Analysis — ada","text":"x Community occurrence matrix. Rows sites columns species phy Phylogenetic tree sp.bin Character indicating methods used compute number time slices metrics computed. Default \"Sturges\" marginal Logical indicating lik.threshold Logical indicating threshold value used select likelihood values ancestor species site. Default TRUE threshold Scalar indicating threshold value used select likelihood given species present site compute.fields Logical, indicates phylogenetic fields computed. Default FALSE","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/ada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ancestral Diversity Analysis — ada","text":"list size eight containing following objects Phylogeny Phylogenetic tree Root.Age Numeric containing root age tree used Per.node.ancestral.area Matrix containing ancestors (nodes) species Diversity..Time Age node phylogeny Cell.Metric Matrix containing assemblage level metrics richness ancestral diversity","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/ada.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ancestral Diversity Analysis — ada","text":"ada function calculates ancestral assemblage reconstruction assemblage matrix using reconstruction ace function ape package","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_newick.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic tree in of Akodon genus — akodon_newick","title":"Phylogenetic tree in of Akodon genus — akodon_newick","text":"phylogenetic tree containing 30 species genus Akodon","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_newick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic tree in of Akodon genus — akodon_newick","text":"","code":"akodon_newick"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_newick.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylogenetic tree in of Akodon genus — akodon_newick","text":"newick phylogenetic tree","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrence data for Akodon species — akodon_sites","title":"Occurrence data for Akodon species — akodon_sites","text":"occurrence data species Akodon genus","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Occurrence data for Akodon species — akodon_sites","text":"","code":"akodon_sites"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/akodon_sites.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Occurrence data for Akodon species — akodon_sites","text":"data frame containing 732 rows 40 columns","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/averaged_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Averaged rates of life mode for Sigmodontinae assemblages — averaged_rates","title":"Averaged rates of life mode for Sigmodontinae assemblages — averaged_rates","text":"Data frame three columns averaged values tip based metrics trait evolution","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/averaged_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Averaged rates of life mode for Sigmodontinae assemblages — averaged_rates","text":"","code":"averaged_rates"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/averaged_rates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Averaged rates of life mode for Sigmodontinae assemblages — averaged_rates","text":"object class tbl_df (inherits tbl, data.frame) 1770 rows 3 columns.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"Affiliation assemblages based phylogenetic turnover","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"","code":"calc_affiliation_evoreg(phylo.comp.dist, groups)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"phylo.comp.dist distance matrix indicating phylogenetic (taxonomic/functional) distance composition among assemblages groups character vector indicating group assemblage. object can obtained calc_evoregions","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"list two matrix, one containing affiliation values group cell classified containing cell coordinates","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"function calculates degree affiliation community region (evoregion), community classified. used coupled analysis Principal Coordinates Phylogenetic Structure (PCPS) represent phylogenetic distances analysis output analysis represent degree membership assemblages evoregion, described Maestri Duarte 2020.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"Maestri, R Duarte L.d.S. (2020). Evoregions: Mapping shifts phylogenetic turnover across biogeographic regions. Methods Ecology Evolution, 11, 1652-1662.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_affiliation_evoreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Affiliation of assemblages based on phylogenetic turnover — calc_affiliation_evoreg","text":"","code":"if (FALSE) { # \\dontrun{ # First run the classification #' data(akodon_newick) # phylogenetic tree data(akodon_sites) # occurrence data  akodon_pa <- akodon_sites %>%      dplyr::select(-LONG, -LAT) spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree] regions <- calc_evoregions(comm = akodon_pa, phy = akodon_newick) site_region <- regions$Cluster_Evoregions # classification of each community in regions  axis_sel <- which(regions$PCPS$prop_explainded >=      regions$PCPS$tresh_dist) # significant PCPS axis PCPS_thresh <- regions$PCPS$vectors[, axis_sel] # only significant axis dist_phylo_PCPS <- vegan::vegdist(PCPS_thresh, method = \"euclidean\") # distance matrix  calc_affiliation_evoreg(phylo.comp.dist = dist_phylo_PCPS,     groups = regions$Cluster_Evoregions) # affiliation } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"Computes arrival ages species assemblages","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"","code":"calc_age_arrival(W, tree, ancestral.area, biogeo, age.no.ancestor = \"recent\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"W Occurrence matrix, rows assemblages columns species tree Phylogenetic tree newick format ancestral.area One column data frame, nodes row one column containing occurrence nodes biogeo One column data frame, assemblages rows one column containing region assemblage located age..ancestor character string \"recent\" (default) \"half.edge\" indicating deal cases recent aancestor tip node region. \"recent\" attributes small age (10e-5), \"half.edge\" attributes age half length branch linking ancestor tip.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"list length two. age_arrival matrix arrival age species assemblage mean_age_arrival mean age values assemblage","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"function computes mean arrival age species assemblage based ancestral area reconstruction. assemblage calculate arrival establishment ancestor present-day species showed Van Dijk et al (2021). consider arrival event arrival ancestor establishment ancestor present day. Arrival events occurred last speciation event lineage present time can assigned small value age corresponding half lenght branch linking ancestor present day species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"Van Dijk, .; Nakamura G,; Rodrigues, .V.; Maestri, R. Duarte, L.d.S. (2021). Imprints tropical niche conservatism historical dispersal radiation Tyrannidae (Aves:Passeriformes). Biol. Journ. Linnean Soc., 134, 57-67.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"Gabriel Nakamura gabriel.nakamura.souza@gmail.com Arthur Rodrigues","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_age_arrival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the arrival ages of each species in the assemblages — calc_age_arrival","text":"","code":"# hypothetical occurrence matrix with species in columns and assemblages in lines  W_toy<- matrix(c(0, 1, 1, 0, 1,                   1, 0, 1, 0, 1,                    0, 0, 1, 0, 0),nrow= 3,                   ncol= 5,dimnames=list(c(\"Comm 1\", \"Comm 2\", \"Comm 3\"),                   c(paste(\"s\", 1:5, sep=\"\"))))    #toy tree  data(toy_treeEx)    # hypothetical data indicating the ecoregions of each assemblage  biogeo_toy <- data.frame(Ecoregion= c(\"A\", \"B\", \"C\"))    # hypothetical data indicating the ancestral range of each node  ancestral_area_toy <- data.frame(state= c(\"ABC\", \"B\", \"C\", \"ABC\"))    # caculating age of each assemblage  age_assemblages <- calc_age_arrival(W_toy, toy_treeEx, ancestral_area_toy, biogeo_toy)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Ancestral State per Assemblage — calc_ancestral_state","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"Ancestral State per Assemblage","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"","code":"calc_ancestral_state(tree, ancestral.area, prefix = \"N\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"tree newick phylogenetic tree object ancestral.area One column data frame. Lines nodes column biomes/region occurrence ancestors. Can obtained using (get_node_range_BioGeoBEARS) prefix single character string used name nodes","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"data frame assemblages lines nodes columns. cell contains ancestral area/Ecoregion occurrence node respective species.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"Gabriel Nakamura gabriel.nakamura.souza@gmail.com","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ancestral_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ancestral State per Assemblage — calc_ancestral_state","text":"","code":"biogeo_toy <- data.frame(Ecoregion= c(\"A\", \"B\", \"C\")) ancestral_area_toy <- data.frame(state= c(\"ABC\", \"B\", \"C\", \"ABC\")) calc_ancestral_state(toy_treeEx, ancestral_area_toy) #>    s1    s2    s3    s4    s5    #> N6 \"ABC\" \"ABC\" \"ABC\" \"ABC\" \"ABC\" #> N7 \"B\"   \"B\"   \"B\"   NA    NA    #> N8 \"C\"   \"C\"   NA    NA    NA    #> N9 NA    NA    NA    \"ABC\" \"ABC\""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"wrapper function BioGeoBEARS::runBSM(). uses result BioGeoBEARS model input generate realized range area changes across tree nodes branches. mapping done stochastically based model parameters.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"","code":"calc_bsm(   BioGeoBEARS.data,   phyllip.file,   tree.path,   max.maps = 100,   n.maps.goal = 50,   seed = NULL,   save_after_every_try = FALSE,   ... )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"BioGeoBEARS.data BioGeoBEARS result model object phyllip.file path phyllip file used original model tree.path path phylogenetic tree used original model max.maps maximum number stochastic maps try generate (passed maxnum_maps_to_try runBSM() {BioGeoBEARS}) n.maps.goal Target number successfully generated stochastic maps seed Optional seed reproducibility stochastic simulations. save_after_every_try Logical. TRUE, results saved attempt (default FALSE). ... Additional arguments passed runBSM() {BioGeoBEARS}","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"list (BSM output) containing simulated mappings, including ancestral range estimates event counts. output directly produced runBSM() {BioGeoBEARS}.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"Matzke, N. J. (2013). Probabilistic historical biogeography: new models founder-event speciation, imperfect detection, fossils allow improved accuracy model-testing. Frontiers Biogeography, 5(4). Dupin, J., et al. (2017). Bayesian estimation global biogeographical history Solanaceae. Journal Biogeography, 44(4), 887–899.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_bsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate Biogeographical Stochastic Mapping (BSM) with BioGeoBEARS — calc_bsm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"akodon_newick\") data(\"resDEC\")  # BioGeoBEARS model result  bsm_result <- calc_bsm(   BioGeoBEARS.data = resDEC,   phyllip.file = system.file(\"extdata\", \"geo_area_akodon.data\", package = \"Herodotools\"),   tree.path = system.file(\"extdata\", \"akodon.new\", package = \"Herodotools\"),   max.maps = 50,   n.maps.goal = 10,   seed = 1234 ) } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"species present site, function calculates proportional contribution ancestral areas dispersal lineage site's region.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"","code":"calc_dispersal_from(W, tree, ancestral.area, biogeo)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"W Occurrence matrix, rows assemblages columns species tree Phylogenetic tree newick format ancestral.area One column data frame nodes rows one column indicating occurrence (biome/ecoregion) area nodes biogeo One column data frame assemblages rows respective biome/ecoregion","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"data frame assemblages rows regions columns. values indicates percentage contribution region assemblage. NA represents contribution","code":""},{"path":[]},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"Arthur V Rodrigues rodrigues.arthur.v@gmail.com","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_dispersal_from.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportional contribution of an ancestral area to the species in other region — calc_dispersal_from","text":"","code":"if (FALSE) { # \\dontrun{ data(akodon_sites) # occurrence matrix akodon_pa <- akodon_sites %>% dplyr::select(-LONG, -LAT) data(akodon_newick) # phylogenetic tree spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree] data(regions) # biogeographic region data(resDEC) # output from ancestral area reconstruction node.area <- get_node_range_BioGeoBEARS(resDEC,                                         phyllip.file = here::here(\"inst\",                                          \"extdata\", \"geo_area_akodon.data\")                                         ,akodon_newick,max.range.size = 4)  calc_dispersal_from(W=akodon_pa_tree,                     tree=akodon_newick,                     ancestral.area=node.area,biogeo=regions) # historical dispersal analysis } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"tip, function calculates evolutionary distinctiveness (ED), can total ED situ ED. See details. default, calculates total ED.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"","code":"calc_ed(   tree,   ancestral.area = NULL,   current.area = NULL,   type = c(\"equal.splits\", \"fair.proportion\") )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"tree Phylogenetic tree class 'phylo'. ancestral.area one-column data frame indicating area occurrence node (rows). Row names must correspond node labels tree. current.area character string indicating focal area. tips assumed present area computing situ ED. type Character indicating type ED metric use. One \"equal.splits\" (default) \"fair.proportion\".","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"named numeric vector ED values tips phylogeny.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"Total ED (biogeographical restriction): neither ancestral.area current.area provided, function calculates ED originally proposed Redding & Mooers (2006, 2007). situ ED (biogeographical restriction): ancestral.area current.area provided, ED calculated along branches ancestral area matches provided current.area. represents evolutionary distinctiveness accumulated situ within specified biogeographical region. must provide either ancestral.area current.area (situ ED), neither (total ED). Providing one result error.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"Redding, D. W., & Mooers, . Ø. (2006). Incorporating evolutionary measures conservation prioritization. Conservation Biology, 20(6), 1670–1678. https://doi.org/10.1111/j.1523-1739.2006.00555.x Redding, D. W., & Mooers, . Ø. (2007). shape phylogenetic trees context conservation: review macroevolutionary macroecology. Philosophical Transactions Royal Society B: Biological Sciences, 362(1478), 849–860. https://doi.org/10.1098/rstb.2006.1977","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_ed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate evolutionary distinctiveness (ED) based on a biogeographical model — calc_ed","text":"","code":"# example for calc_ed # generate simlutated data ---- set.seed(4523) tree_sim <- ape::rcoal(5)  # Create node area table (only bifurcating nodes) node_area <- data.frame(     area = c(\"A\", \"A\", \"BC\", \"AD\"),     row.names = paste0(\"N\", 6:9)     )      # create insertion of nodes to simulate for change in area in the branch  # Use ggtree to identify insertion points   gdata <- ggtree::ggtree(tree_sim)$data #> Warning: `aes_()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()` #> ℹ The deprecated feature was likely used in the ggtree package. #>   Please report the issue at <https://github.com/YuLab-SMU/ggtree/issues>. #> Warning: Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? ins_data <- gdata %>% dplyr::filter(node %in% c(3, 9, 8)) #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. #> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned. ins_data <- tibble::add_row(ins_data, ins_data[2, ]) %>% dplyr::arrange(node)  # Define inserted nodes with areas inserts <- tibble::tibble(   parent = ins_data$parent,   child = ins_data$node,   event_time = c(0.2, 0.5, 0.9, .3),   node_area = c(\"AC\", \"AB\", \"BC\", \"D\")   )    # Insert nodes  result <- insert_nodes(tree_sim, inserts, node_area = node_area) #> Warning: Arguments in `...` must be used. #> ✖ Problematic arguments: #> • as.Date = as.Date #> • yscale_mapping = yscale_mapping #> • hang = hang #> ℹ Did you misspell an argument name? tree_out <- result$phylo node_area_out <- result$node_area   # Compute Evolutionary Distinctiveness --------  # ED total (same results as picante::evol.distinct()) ed_total <- calc_ed(     tree = tree_out,   type = \"equal.splits\")    # ED partial. Account for in situ distinctiveness only  ed_partial_A <- calc_ed(   tree = tree_out,   ancestral.area = node_area_out,    current.area = \"A\",    type = \"equal.splits\")    ed_partial_D <- calc_ed(   tree = tree_out,   ancestral.area = node_area_out,    current.area = \"D\",    type = \"equal.splits\")    data.frame(   species = names(ed_total),    ed_total,   ed_partial_A,   ed_partial_D   ) #>    species  ed_total ed_partial_A ed_partial_D #> t5      t5 1.1821401   0.00000000    0.0000000 #> t3      t3 1.1821401   0.00000000    0.0000000 #> t1      t1 1.3149164   1.31491644    0.0000000 #> t2      t2 0.6674121   0.01990779    0.2214118 #> t4      t4 0.6674121   0.01990779    0.2214118    # tree visualization tree_viz <- tree_out tree_viz$node.label <- node_area_out$area  plot(tree_viz, show.node.label = TRUE) ape::nodelabels(adj = 1.2)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"Defining biogeographic regions based phylogenetic turnover","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"","code":"calc_evoregions(   comm,   phy,   max.n.clust = NULL,   method.dist = \"bray\",   tresh.dist = 0.05,   method.clust = \"kmeans\",   stat.clust = \"BIC\",   n.iter.clust = 1e+07,   criterion.clust = \"diffNgroup\",   seed = NULL )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"comm Species occurrence matrix. Assemblages rows species columns phy phylogenetic tree class phylo containing species comm. max.n.clust Integer value used find.clusters. Indicates maximum number clusters tried. NULL (default) function uses optimal_phyloregion function phyloregion package determine optimal number clusters. function based \"elbow\"/\"knee\" method. See details. method.dist Character. method used compute phyogenetic distances among assemblages. Dissimilarity index, accepted vegdist (Default \"bray\"). tresh.dist scalar informing threshold value select eigenvectors based amount variation eigenvector. Default 0.05 (eigenvector least 5% variation). See details. method.clust Character indicating grouping algorithm used cluster analysis. Options avalible \"kmeans\" (default) \"ward\". stat.clust Character used find.clusters indicating statistic computed model. Can \"BIC\" (default), \"AIC\" \"WSS\". n.iter.clust Integer used find.clusters function adegenet package indicate number iterations used run K-means algorithm criterion.clust Character string matching \"diffNgroup\" (default), \"min\", \"goesup\", \"smoothNgoesup\", \"goodfit\", indicating criterion automatic selection optimal number clusters. See criterion argument find.clusters explanation procedures. seed default NULL. Set seed find.clusters, provides names cluster groups","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"list length four containing: PCPS matrix PCPS vectors cluster_evoregions vector indicating region assemblage classified","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"evoregions performs biogeographical regionalization based phylogenetic turnover. Unlike approaches, uses fuzzy‐set–based metric phylogenetic dissimilarity incorporates features evolutionary history (e.g., tree imbalance). allows evoregions capture variation lineage diversification historical relationships accounted conventional phylogenetic turnover metrics. important details running evoregions","code":""},{"path":[]},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_evoregions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defining biogeographic regions based on phylogenetic turnover — calc_evoregions","text":"","code":"if (FALSE) { # \\dontrun{ data(akodon_sites) # occurrence data  data(akodon_newick) # phylogenetic tree  akodon_pa <- akodon_sites %>%      dplyr::select(-LONG, -LAT)      spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree]  regions <- calc_evoregions(comm = akodon_pa_tree, phy = akodon_newick) site_region <- regions$cluster_evoregions # classification of each community in regions } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Harmonic Mean — calc_harmonic_mean","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"Computes harmonic mean numeric vector. harmonic mean defined \\(n / \\sum (1/x_i)\\), \\(n\\) number observations.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"","code":"calc_harmonic_mean(x, na.rm = FALSE, ignore.zero = FALSE)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"x numeric vector. na.rm Logical; TRUE, remove NA values computation. ignore.zero Logical; TRUE, remove zeros computation.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"numeric value representing harmonic mean.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"ignore.zero = FALSE vector contains zeros, harmonic mean zero definition. values removed (due NAs zeros), function returns NA.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_harmonic_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Harmonic Mean — calc_harmonic_mean","text":"","code":"# Simple harmonic mean calc_harmonic_mean(c(1, 2, 3)) #> [1] 1.636364  # With a zero (harmonic mean collapses to 0) calc_harmonic_mean(c(1, 2, 0)) #> [1] 0  # Ignoring zeros calc_harmonic_mean(c(1, 2, 0), ignore.zero = TRUE) #> [1] 1.333333  # With NA values calc_harmonic_mean(c(1, 2, NA), na.rm = TRUE) #> [1] 1.333333  # Combining both options calc_harmonic_mean(c(1, 2, 0, NA), na.rm = TRUE, ignore.zero = TRUE) #> [1] 1.333333"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":null,"dir":"Reference","previous_headings":"","what":"Tip-based in-situ diversification metrics — calc_insitu_diversification","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"Tip-based -situ diversification metrics","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"","code":"calc_insitu_diversification(   W,   tree,   ancestral.area,   biogeo,   type = \"equal.splits\" )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"W species occurrence (assemblage) matrix. Rows represent assemblages (sites) columns represent species. tree phylogenetic tree object (class phylo). ancestral.area one-column data frame indicating ecorregion occurrence node (rows). biogeo data frame one column indicating ecoregion assemblage (row). type Character string indicating type evolutionary distinctiveness (ED) metric used. Options \"equal.splits\" (default) \"fair.proportion\".","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"named list containing following elements (available): jetz_site_sp: Site--species matrix DR diversification rates. jetz_comm_mean: Harmonic mean DR diversification rates per site. insitu_site_sp: Site--species matrix \\(DR_in-situ\\) diversification rates. insitu_comm_mean: Harmonic mean \\(DR_in-situ\\) diversification rates per site (ignoring zeros specified). prop_site_sp: Site--species matrix proportional diversification rates. prop_comm_mean: Arithmetic mean proportional diversification rates per site.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"function calculates three related diversification metrics: Jetz diversification rate (DR_jetz): inverse evolutionary distinctiveness (ED) metric species across full phylogeny. described Jetz et al (2012)   -situ diversification rate (DR_insitu): situ measure diversification calculated inverse ED, restricted portion species' branches diversified region (informed biogeo argument) matching assemblage. Proportional diversification rate (DR_prop): fraction diversification occurred given ecoregion (informed biogeo argument), calculated proportion ED region relative total ED, multiplied species’ total diversification rate (DR_jetz). assemblage-level summaries, site--species matrices generated metric, site-level means calculated : Harmonic mean (Jetz -situ): computed across species assemblage. Zeros -situ matrix ignored harmonic mean calculation account species diversification situ. Arithmetic mean (proportional rates): used proportional diversification rates.","code":"\\deqn{            DR_{i} = (\\sum_{j=1}^{N_i}\\cdot l_j \\cdot 1/2^{j-1})^{-1}         }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_diversification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tip-based in-situ diversification metrics — calc_insitu_diversification","text":"","code":"if (FALSE) { # \\dontrun{ # Example with a random tree and toy data library(ape) tree <- rcoal(5) W <- matrix(c(1,0,1,1,1,0,1,1,0,1 ), nrow=2, byrow=TRUE,             dimnames = list(c(\"site1\",\"site2\"), tree$tip.label)) biogeo <- data.frame(region=c(\"A\",\"B\")) ancestral.area <- data.frame(region=rep(\"A\", tree$Nnode))  res <- calc_insitu_diversification(W, tree, ancestral.area, biogeo) str(res) } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diversification-based PD and PE — calc_insitu_metrics","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"Diversification-based PD PE","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"","code":"calc_insitu_metrics(W, tree, ancestral.area, biogeo, PD = TRUE, PE = TRUE)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"W Occurrence matrix, rows assemblages columns species tree Phylogenetic hipothesis newick format ancestral.area One column data frame nodes rows one column indicating occurrence area nodes biogeo One columns data frame rows indicating assemblages one column indicating biome/ecoregion assemblage PD Logical, TRUE (default) PD~-situ~ computed PE Logical, TRUE (default) PE~-situ~ computed","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"data frame containing values original PD PE also -situ diversification based version","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"function computes two modified versions Phylogenetic Diversity (PD) Phylogenetic endemism considering calculation -situ diversification. PD~-situ~ PE~-situ~ calculated coupling calculation ancetral area reconstruction divide phylogenetic tree two parts, one correspond dispersion events another correspond -situ diversification events. use -situ diversification part calculate Db-PD Db-PE","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"Gabriel Nakamura gabriel.nakamura.souza@gmail.com","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_insitu_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diversification-based PD and PE — calc_insitu_metrics","text":"","code":"W_toy<- matrix(c(0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0), nrow= 3, ncol= 5, dimnames=list(c(\"Comm 1\", \"Comm 2\", \"Comm 3\"), c(paste(\"s\", 1:5, sep=\"\"))))  data(\"toy_treeEx\")  biogeo_toy <- data.frame(Ecoregion= c(\"A\", \"B\", \"C\"))  ancestral_area_toy <- data.frame(state= c(\"ABC\", \"B\", \"C\", \"ABC\"))  assemblage_phylo_metrics <- calc_insitu_metrics(W_toy,       toy_treeEx,       ancestral_area_toy,        biogeo_toy)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":null,"dir":"Reference","previous_headings":"","what":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"Site-Based Estimation Ancestral Range Species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"","code":"calc_sbears(   x,   phy,   coords,   method = c(\"single_site\", \"disp_assembly\"),   w_slope = 5,   min_disp_prob = 0.8,   compute.node.by.sites = FALSE,   make.node.label = FALSE )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"x Matrix object community/assemblage composition. Rows represent sites columns represents species. phy phylogenetic tree phylo class object. coords rectangular object (can matrix, data.frame tibble) containing two columns, one longitude another latitude coordinates order. method character indicating ancestral range probabilities computed. options \"single_site\" \"disp_assembly\" w_slope scalar representing slope dispersal kernel function. compute.node..sites Logical, TRUE (default) computes matrix node occurrence site. make.node.label Logical, TRUE (default) nodes phylogeny named letter \"N\" preceding node number","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"list three elements. reconstruction result ancestral .   area reconstruction; phylogeny matrix containing occurrence nodes sites joint.phylo.obs joint occurrence nodes species phylogenetic tree.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"SBEARS (Site-Based Estimation Ancestral Range Species) method ancestral state reconstruction species geographic ranges. operates fine spatial resolution require predefined discrete biogeographic areas. method estimates ancestral ranges maximum likelihood framework, using site-level occurrence information. method used compute ancestral range probabilities can single_site disp_assembly. methods SBEARS use function fastAnc reconstruct ancestral ranges. single_site site taken binary categorical trait representing presence (state 1) absence (state 0) every species site, reconstructed along nodes phylogeny. disp_assembly option single site reconstruction carried , producing matrix describing standardized probabilities occurrence node site. difference additional step performed compute probability cell colonized ancestral species originating focal cell. probability colonization decreases increasing distance focal cell. probability ancestral species disperse cell can defined using dispersal kernel function proposed Gravel et al (2006).","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_sbears.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Site-Based Estimation of Ancestral Range of Species — calc_sbears","text":"Gravel D., Canhan C.D., Beaudet M. Messier C. Reconciling niche neutrality: continuum hypothesis. 2006. Ecology Letters doi:10.1111/j.1461-0248.2006.00884.x","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantifying species association with evoregions — calc_spp_association_evoreg","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"Quantifying species association evoregions","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"","code":"calc_spp_association_evoreg(comm, group.comm, spp.association = 0.7)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"comm assemblage/community matrix communities rows species columns group.comm vector containing classification community groups spp.association scalar indicating level association evaluated assign species groups. Default 0.7","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"matrix species rows one columns indicating name group species associated given level species association used argument spp.association. species fail reach threshold assigned \"fuzzy\" status","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"Maestri, R. Duarte, L.d.S. (2020). Evoregions: Mapping shifts phylogenetic turnover across biogeographic regions. Methods Ecol. Evol., 11, 1652-1662.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"Leandro Duarte, Renan Maestri Gabriel Nakamura gabriel.nakamura.souza@gmail.com","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_spp_association_evoreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantifying species association with evoregions — calc_spp_association_evoreg","text":"","code":"if (FALSE) { # \\dontrun{ data(akodon_sites) # occurrence data  akodon_pa <- akodon_sites %>% dplyr::select(-LONG, -LAT) data(akodon_newick) # phylogenetic tree spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree] regions <- calc_evoregions(comm = akodon_pa, phy = akodon_newick) # compute evoregions groups <- regions$cluster_evoregions calc_spp_association_evoreg(comm = akodon_pa_tree,                         group.comm = groups,                         spp.association = 0.7) # calculate species association } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":null,"dir":"Reference","previous_headings":"","what":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"Tip-based metrics trait evolution","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"","code":"calc_tip_based_trait_evo(   tree,   trait,   nsim = 1,   method = c(\"transition_rates\", \"last_transition_time\", \"stasis_time\") )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"tree phylogenetic tree object class \"phylo\" trait named vector containing tip states discretely valued character. names must match tip labels tree. nsim Number simulations stochastic character mapping. method Tip-based metric, partial match \"transition_rates\", \"last_transition_time\" \"stasis_time\".","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"list (length equal nsim) tip-based metrics estimated per species.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"function calculates three metrics represent macroevolutionary dynamic traits species phylogenetic tree. Transition rates, last transition time stasis time, originally proposed Luza et al (2021). Transition rates indicate many times ancestral character changed time. Stasis time indicates maximum branch length (time interval) current tip-character maintained across whole phylogeny. Finally, last transition time sum branch lengths tip previous node reconstructed character equal current tip-character. Originally function uses stochastic character mapping discrete trait data, types trait reconstruction can used.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"André Luza Vanderlei Debastiani","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/calc_tip_based_trait_evo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tip-based metrics of trait evolution — calc_tip_based_trait_evo","text":"","code":"if (FALSE) { # \\dontrun{ data(rodent.phylo) # phylogenetic tree data(trait) # categorical traits on species diet trans_rates <- calc_tip_based_trait_evo(tree=match_data$phy,trait =trait ,     nsim = 50,method = c(\"transition_rates\", \"last_transition_time\", \"stasis_time\")     ) } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"Estimate maximum number groups DAPC analysis","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"","code":"find_max_nclust(   x,   threshold,   max.nclust,   nperm = 100,   method = \"kmeans\",   stat = \"BIC\",   criterion = \"diffNgroup\",   subset = 100,   confidence.level = c(0.7, 0.8, 0.9, 0.95, 0.99) )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"x data.frame matrix object containing eigenvectors sites. threshold Scalar. number eigenvectors used perform classification. max.nclust vector containing values maximum number groups evaluated. nperm Scalar. Number times classification performed. method Character, one c(\"kmeans\",\"ward\"). used find.clusters function. See find.clusters adegenet package. Default \"kmeans\" stat Character, one c(\"BIC\", \"AIC\", \"WSS\"). used find.clusters function. See find.clusters adegenet package. Default \"BIC\". criterion Character one c(\"diffNgroup\", \"min\",\"goesup\", \"smoothNgoesup\", \"goodfit\"). used find.clusters function. Default \"diffNgroup\". See find.clusters adegenet package. subset Scalar. number cells used analysis. particularly important whenever total number cells large (> 1000). confidence.level vector containing values threshold confidence level used estimate congruence classification pattern.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"Matrix containing congruence values ranging 0-1 max.nclust value (see Arguments) confidence level.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"Additional details...","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_max_nclust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the maximum number of groups in DAPC analysis — find_max_nclust","text":"","code":"if (FALSE) { # \\dontrun{ data(regions) evovectors <- regions$PCPS$vectors # eigenvectors by site find_max_nclust(x = evovectors, threshold = 3, max.nclust = 10) } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary function used to define the occurrence threshold used to define node presences — find_threshold","title":"Auxiliary function used to define the occurrence threshold used to define node presences — find_threshold","text":"Auxiliary function used define occurrence threshold used define node presences","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary function used to define the occurrence threshold used to define node presences — find_threshold","text":"","code":"find_threshold(   x,   threshold.steps = c(0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9) )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary function used to define the occurrence threshold used to define node presences — find_threshold","text":"x matri containing continuous probabilities occurrences nodes accross sites threshold.steps numeric vector defining threshold values compared procedure","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/find_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxiliary function used to define the occurrence threshold used to define node presences — find_threshold","text":"list object containing following information:","code":"\\itemize{     \\item Maximum_site_probability: a vector containing the maximum probability         of occurrence of nodes for ech site     \\item Removed_sites     \\item Correlation_between_steps     \\item Select_threshold: a scalar indicating the selected threshold }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_bsm_node_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the node area states from the biogeographical stochastic mapping's result — get_bsm_node_area","title":"Get the node area states from the biogeographical stochastic mapping's result — get_bsm_node_area","text":"Get node area states biogeographical stochastic mapping's result","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_bsm_node_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the node area states from the biogeographical stochastic mapping's result — get_bsm_node_area","text":"","code":"get_bsm_node_area(   bsm,   BioGeoBEARS.data,   phyllip.file,   tree.path,   max.range.size )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_bsm_node_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the node area states from the biogeographical stochastic mapping's result — get_bsm_node_area","text":"bsm results function calc_bsm() BioGeoBEARS.data BioGeoBEARS result model object phyllip.file path phyllip file used original model tree.path path phylogenetic tree used original model max.range.size maximum range size used biogeographical reconstruction","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_bsm_node_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the node area states from the biogeographical stochastic mapping's result — get_bsm_node_area","text":"list length number stochastic mapping. list element single column data frame node area states","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_insert_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data frame of transition states from Biogeographical Stochastic Mapping — get_insert_df","title":"Get data frame of transition states from Biogeographical Stochastic Mapping — get_insert_df","text":"Get data frame transition states Biogeographical Stochastic Mapping","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_insert_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data frame of transition states from Biogeographical Stochastic Mapping — get_insert_df","text":"","code":"get_insert_df(bsm, phyllip.file, max.range.size, include_null_range = TRUE)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_insert_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data frame of transition states from Biogeographical Stochastic Mapping — get_insert_df","text":"bsm results function calc_bsm() phyllip.file path phyllip file used original model max.range.size maximum range size used biogeographical reconstruction include_null_range default TRUE.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_insert_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data frame of transition states from Biogeographical Stochastic Mapping — get_insert_df","text":"list length number stochastic mapping. list element data frame columns: child = child node number, parent = ancestor node number, event_time = time event parent child, node_area = range area event, event_type = type event, source = can 'cladogenesis' 'anagenesis'","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_node_range_BioGeoBEARS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","title":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","text":"auxiliary function can ancestral area reconstruction BioGeoBEARS obtain data frame containing ancestral area occurrence (biome range) ancestors (nodes)","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_node_range_BioGeoBEARS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","text":"","code":"get_node_range_BioGeoBEARS(   BioGeoBEARS.data,   phyllip.file,   tree,   max.range.size )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_node_range_BioGeoBEARS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","text":"BioGeoBEARS.data object containing result BioGeoBEARS reconstruction phyllip.file Phylip file, used BioGeoBEARS package tree phylogenetic tree max.range.size Scalar indicating maximum number biomes node can occupy","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_node_range_BioGeoBEARS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","text":"Data frame two columns, one indicating node ancestral biome range","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_node_range_BioGeoBEARS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get node ranges from BioGeoBEARS biome reconstruction model — get_node_range_BioGeoBEARS","text":"","code":"data(resDEC) # ancestral area reconstruction from biogeobears data(akodon_newick) extdata_dir = system.file(\"extdata\", package=\"Herodotools\") fn = paste(extdata_dir, \"/geo_area_akodon.data\", sep=\"\") node_area <- get_node_range_BioGeoBEARS(resDEC,phyllip.file = fn, akodon_newick,                                         max.range.size = 4) # obtaining area for each node"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_nodes_info_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","title":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","text":"Auxiliary function compute information node path dispersal path species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_nodes_info_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","text":"","code":"get_nodes_info_core(W, tree, ancestral.area, biogeo)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_nodes_info_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","text":"W Numerical matrix, rows assemblages columns species tree Phylogenetic tree newick format ancestral.area Single column data frame nodes rows ancestral area/Ecoregion occurrence columns. reconstruction comes BioGeoBears data frame can obtained (get_node_range_BioGeoBEARS) biogeo Data frame containing information biome/area/ecoregion assemblage","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_nodes_info_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","text":"list auxiliary information nodes species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_nodes_info_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auxiliary function to compute information of node path and dispersal path for each species — get_nodes_info_core","text":"","code":"if (FALSE) { # \\dontrun{ # hypothetical occurrence matrix with species in columns and assemblages in lines  W_toy<- matrix(c(0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0),      nrow= 3,ncol= 5,      dimnames=list(c(\"Comm 1\", \"Comm 2\", \"Comm 3\"),      c(paste(\"s\", 1:5, sep=\"\"))))    #toy tree  data(toy_treeEx)    # hypothetical data indicating the ecoregions of each assemblage  biogeo_toy <- data.frame(Ecoregion= c(\"A\", \"B\", \"C\"))    # hypothetical data indicating the ancestral range of each node  ancestral_area_toy <- data.frame(state= c(\"ABC\", \"B\", \"C\", \"ABC\"))   get_nodes_info_core(W=W_toy,tree=toy_treeEx,ancestral.area=ancestral_area_toy,biogeo=biogeo_toy) } # }"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":null,"dir":"Reference","previous_headings":"","what":"Species occurrence in each evoregion — get_region_occ","title":"Species occurrence in each evoregion — get_region_occ","text":"Auxiliary function produce occurrence data frame species region. object can get_tipranges_to_BioGeoBEARS function produce phyllip file needed BioGeoBEARS ancestral area reconstruction","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species occurrence in each evoregion — get_region_occ","text":"","code":"get_region_occ(comm, site.region)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species occurrence in each evoregion — get_region_occ","text":"comm Occurrence data frame species colums rows corresponding assemblages site.region character vector indicating membership assemblage regions","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species occurrence in each evoregion — get_region_occ","text":"occurrence data frame species rownames regions columns","code":""},{"path":[]},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Species occurrence in each evoregion — get_region_occ","text":"Gabriel Nakamura Arthur Rodrigues","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_region_occ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species occurrence in each evoregion — get_region_occ","text":"","code":"data(akodon_sites) data(akodon_newick) akodon_pa <- akodon_sites %>% dplyr::select(-LONG, -LAT) spp_in_tree <- names(akodon_pa) %in% akodon_newick$tip.label akodon_pa_tree <- akodon_pa[, spp_in_tree] data(regions) site_evoregion <- regions$Cluster_Evoregions get_region_occ(comm=akodon_pa_tree,site.region=site_evoregion) #>               A B C D E F G H I #> A_aerosus     1 1 0 0 0 0 0 0 0 #> A_affinis     0 1 0 0 0 0 0 0 0 #> A_albiventer  1 1 0 0 0 0 0 0 0 #> A_azarae      0 0 1 0 0 1 0 0 1 #> A_boliviensis 1 0 0 0 0 0 0 0 0 #> A_budini      1 0 0 0 0 0 0 0 0 #> A_cursor      0 0 0 0 0 0 0 1 0 #> A_dayi        1 0 0 1 0 0 0 0 0 #> A_dolores     0 0 1 1 0 0 0 0 0 #> A_fumeus      1 0 0 0 0 0 0 0 0 #> A_iniscatus   0 0 0 1 1 0 0 0 0 #> A_juninensis  1 0 0 0 0 0 0 0 1 #> A_kofordi     1 0 0 0 0 0 0 0 0 #> A_lindberghi  1 0 0 0 0 0 0 1 0 #> A_lutescens   1 0 0 0 0 0 0 0 0 #> A_mimus       1 0 0 0 0 0 0 0 0 #> A_mollis      0 1 0 0 0 0 0 0 0 #> A_montensis   0 0 0 0 0 0 0 1 0 #> A_mystax      0 0 0 0 0 0 0 1 0 #> A_orophilus   0 1 0 0 0 0 0 0 0 #> A_paranaensis 0 0 0 0 0 1 0 1 0 #> A_reigi       0 0 0 0 0 1 0 0 0 #> A_siberiae    1 0 0 0 0 0 0 0 0 #> A_simulator   1 0 0 0 0 0 0 0 0 #> A_spegazzinii 1 0 1 0 0 0 0 0 0 #> A_subfuscus   1 0 0 0 0 0 0 0 0 #> A_sylvanus    1 0 0 0 0 0 0 0 0 #> A_toba        0 0 1 0 0 0 1 0 0 #> A_torques     1 0 0 0 0 0 0 0 0 #> A_varius      1 0 0 0 1 0 0 0 0"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Species and their respective ancestral nodes — get_spp_nodes","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"function computes matrix containing species respective ancestral nodes","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"","code":"get_spp_nodes(tree, node.prefix = \"N\")"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"tree Phylogenetic tree node.prefix Character indicating prefix used name nodes, default letter \"N\"","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"matrix species lines nodes columns. 1 indicates node corresponds ancestor species zero indicates species share ancestor node","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"auxiliary function , taking phylogenetic tree, allows represent matrix format relationship present-day species (tips) ancestors (nodes). function provides easy way obtain certain objects can used functions, like calc_ancestral_state","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_spp_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species and their respective ancestral nodes — get_spp_nodes","text":"","code":"data(akodon_newick) get_spp_nodes(tree = akodon_newick, node.prefix = \"N\") #>     A_mimus A_lindberghi A_subfuscus A_lutescens A_sylvanus A_boliviensis #> N31       1            1           1           1          1             1 #> N32       0            1           1           1          1             1 #> N33       0            1           1           1          1             1 #> N34       0            0           1           1          1             1 #> N35       0            0           1           1          1             1 #> N36       0            0           1           1          1             1 #> N37       0            0           1           1          1             1 #> N38       0            0           1           1          0             0 #> N39       0            0           0           0          1             1 #> N40       0            0           0           0          0             1 #> N41       0            0           0           0          0             0 #> N42       0            0           0           0          0             0 #> N43       0            0           0           0          0             0 #> N44       0            0           0           0          0             0 #> N45       0            0           0           0          0             0 #> N46       0            0           0           0          0             0 #> N47       0            0           0           0          0             0 #> N48       0            0           0           0          0             0 #> N49       0            0           0           0          0             0 #> N50       0            0           0           0          0             0 #> N51       0            0           0           0          0             0 #> N52       0            0           0           0          0             0 #> N53       0            0           0           0          0             0 #> N54       0            0           0           0          0             0 #> N55       0            0           0           0          0             0 #> N56       0            0           0           0          0             0 #> N57       0            0           0           0          0             0 #> N58       0            0           0           0          0             0 #> N59       0            0           0           0          0             0 #>     A_spegazzinii A_azarae A_fumeus A_kofordi A_juninensis A_cursor A_montensis #> N31             1        1        1         1            1        1           1 #> N32             1        1        1         1            1        1           1 #> N33             1        1        1         1            1        1           1 #> N34             1        1        1         1            1        1           1 #> N35             1        1        1         1            1        0           0 #> N36             1        1        0         0            0        0           0 #> N37             1        0        0         0            0        0           0 #> N38             0        0        0         0            0        0           0 #> N39             1        0        0         0            0        0           0 #> N40             1        0        0         0            0        0           0 #> N41             0        0        1         1            1        0           0 #> N42             0        0        1         1            0        0           0 #> N43             0        0        0         0            0        1           1 #> N44             0        0        0         0            0        0           1 #> N45             0        0        0         0            0        0           0 #> N46             0        0        0         0            0        0           0 #> N47             0        0        0         0            0        0           0 #> N48             0        0        0         0            0        0           0 #> N49             0        0        0         0            0        0           0 #> N50             0        0        0         0            0        0           0 #> N51             0        0        0         0            0        0           0 #> N52             0        0        0         0            0        0           0 #> N53             0        0        0         0            0        0           0 #> N54             0        0        0         0            0        0           0 #> N55             0        0        0         0            0        0           0 #> N56             0        0        0         0            0        0           0 #> N57             0        0        0         0            0        0           0 #> N58             0        0        0         0            0        0           0 #> N59             0        0        0         0            0        0           0 #>     A_reigi A_paranaensis A_mystax A_aerosus A_affinis A_mollis A_orophilus #> N31       1             1        1         1         1        1           1 #> N32       1             1        1         1         1        1           1 #> N33       1             1        1         0         0        0           0 #> N34       1             1        1         0         0        0           0 #> N35       0             0        0         0         0        0           0 #> N36       0             0        0         0         0        0           0 #> N37       0             0        0         0         0        0           0 #> N38       0             0        0         0         0        0           0 #> N39       0             0        0         0         0        0           0 #> N40       0             0        0         0         0        0           0 #> N41       0             0        0         0         0        0           0 #> N42       0             0        0         0         0        0           0 #> N43       1             1        1         0         0        0           0 #> N44       1             1        1         0         0        0           0 #> N45       1             1        1         0         0        0           0 #> N46       0             1        1         0         0        0           0 #> N47       0             0        0         1         1        1           1 #> N48       0             0        0         1         1        1           1 #> N49       0             0        0         1         1        1           1 #> N50       0             0        0         1         1        1           1 #> N51       0             0        0         1         1        0           0 #> N52       0             0        0         0         0        1           1 #> N53       0             0        0         0         0        1           1 #> N54       0             0        0         0         0        0           0 #> N55       0             0        0         0         0        0           0 #> N56       0             0        0         0         0        0           0 #> N57       0             0        0         0         0        0           0 #> N58       0             0        0         0         0        0           0 #> N59       0             0        0         0         0        0           0 #>     A_torques A_budini A_siberiae A_simulator A_varius A_albiventer A_iniscatus #> N31         1        1          1           1        1            1           1 #> N32         1        1          1           1        1            1           1 #> N33         0        0          0           0        0            0           0 #> N34         0        0          0           0        0            0           0 #> N35         0        0          0           0        0            0           0 #> N36         0        0          0           0        0            0           0 #> N37         0        0          0           0        0            0           0 #> N38         0        0          0           0        0            0           0 #> N39         0        0          0           0        0            0           0 #> N40         0        0          0           0        0            0           0 #> N41         0        0          0           0        0            0           0 #> N42         0        0          0           0        0            0           0 #> N43         0        0          0           0        0            0           0 #> N44         0        0          0           0        0            0           0 #> N45         0        0          0           0        0            0           0 #> N46         0        0          0           0        0            0           0 #> N47         1        1          1           1        1            1           1 #> N48         1        1          1           1        1            1           0 #> N49         1        1          1           1        1            0           0 #> N50         1        0          0           0        0            0           0 #> N51         0        0          0           0        0            0           0 #> N52         1        0          0           0        0            0           0 #> N53         0        0          0           0        0            0           0 #> N54         0        1          1           1        1            0           0 #> N55         0        1          1           0        0            0           0 #> N56         0        0          0           1        1            0           0 #> N57         0        0          0           0        0            0           1 #> N58         0        0          0           0        0            0           0 #> N59         0        0          0           0        0            0           0 #>     A_dayi A_toba A_dolores #> N31      1      1         1 #> N32      1      1         1 #> N33      0      0         0 #> N34      0      0         0 #> N35      0      0         0 #> N36      0      0         0 #> N37      0      0         0 #> N38      0      0         0 #> N39      0      0         0 #> N40      0      0         0 #> N41      0      0         0 #> N42      0      0         0 #> N43      0      0         0 #> N44      0      0         0 #> N45      0      0         0 #> N46      0      0         0 #> N47      1      1         1 #> N48      0      0         0 #> N49      0      0         0 #> N50      0      0         0 #> N51      0      0         0 #> N52      0      0         0 #> N53      0      0         0 #> N54      0      0         0 #> N55      0      0         0 #> N56      0      0         0 #> N57      1      1         1 #> N58      1      1         1 #> N59      0      1         1"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_tipranges_to_BioGeoBEARS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates lagrangePHYLIP file for using in BioGeoBEARS — get_tipranges_to_BioGeoBEARS","title":"Generates lagrangePHYLIP file for using in BioGeoBEARS — get_tipranges_to_BioGeoBEARS","text":"prepares save file used geographical areas BioGeoBEARS scripts. based save_tipranges_to_LagrangePHYLIP function BioGEOBEARS package.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_tipranges_to_BioGeoBEARS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates lagrangePHYLIP file for using in BioGeoBEARS — get_tipranges_to_BioGeoBEARS","text":"","code":"get_tipranges_to_BioGeoBEARS(   tip_range,   filename = \"lagrange_area_data_file.data\",   areanames = NULL )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/get_tipranges_to_BioGeoBEARS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates lagrangePHYLIP file for using in BioGeoBEARS — get_tipranges_to_BioGeoBEARS","text":"tip_range data frame. Tip names rows, geographical areas columns. Please provide tip names row.names. See example. filename filename store data. default \"lagrange_area_data_file.data\". areanames names areas. defaut area names generated sequencial upper case letters.","code":""},{"path":[]},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/insert_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert internal nodes in the phylogenetic tree — insert_nodes","title":"Insert internal nodes in the phylogenetic tree — insert_nodes","text":"adds non-bifurcating nodes branches phylogenetic tree represent events ancestral character changes, specifically change range states biogeographic ancestral reconstruction.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/insert_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert internal nodes in the phylogenetic tree — insert_nodes","text":"","code":"insert_nodes(tree, inserts, node_area = NULL)"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/insert_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert internal nodes in the phylogenetic tree — insert_nodes","text":"tree object class 'phylo'. inserts data frame create function get_insert_df() node_area default NULL. One column data frame indicating range area node (rows)","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/insert_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert internal nodes in the phylogenetic tree — insert_nodes","text":"list 2 elements: $phylo: phylogenetic tree added non-bifurcating nodes $node_area: data frame node area added node. argument node_area NULL, node area included data frame.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/plot_ada.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting ancestral area character in space — plot_ada","title":"Plotting ancestral area character in space — plot_ada","text":"Plotting ancestral area character space","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/plot_ada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting ancestral area character in space — plot_ada","text":"","code":"plot_ada(   ada.res,   grid,   coords,   resolution,   patterns = \"all\",   color_palette = \"SunsetDark\",   projection = \"+proj=robin\" )"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/plot_ada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting ancestral area character in space — plot_ada","text":"ada.res object ada function grid spatial object containing cells used calculate ancestral diversity distribution ada coords two column matrix containing values Longitude (first column) Latitude (second column) resolution Scalar informing resolution grids grid object patterns Character, vector containing names metrics spatialized \"\" create map metrics.  characters allowed passed \"rich\", \"Nnodes\", \"PeakDiv\", \"Skewness\", \"LowDistPeak\", \"HighDistPeak\", \"PeakRange\". Default \"\" color_palette Character indicating palette used plot spatial patterns. can one option present scale_fill_carto_c function. Default \"SunsetDark\" projection Character indicating projection used spatial plots. Default \"+proj=robin\"","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/plot_ada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting ancestral area character in space — plot_ada","text":"list containing spatial plots metrics calculated ada.res","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Output from evoregion function with classification of 732 assemblages — regions","title":"Output from evoregion function with classification of 732 assemblages — regions","text":"Object containing list two objects: $PCPS list containing eigenvectors PCPS analysis $Cluster_Evoregions vector containing groups assemblage","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output from evoregion function with classification of 732 assemblages — regions","text":"","code":"regions"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/regions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output from evoregion function with classification of 732 assemblages — regions","text":"object class evoregion length 2.","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/resDEC.html","id":null,"dir":"Reference","previous_headings":"","what":"Output from BioGeoBEARS — resDEC","title":"Output from BioGeoBEARS — resDEC","text":"Object ancestral reconstruction model BioGeoBEARS","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/resDEC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output from BioGeoBEARS — resDEC","text":"","code":"resDEC"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/resDEC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output from BioGeoBEARS — resDEC","text":"list obtained BioGeoBEARS Akodon species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/rodent_phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic tree with 285 species — rodent_phylo","title":"Phylogenetic tree with 285 species — rodent_phylo","text":"Dated () phylogenetic tree newick format containing 285 sigmodontine species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/rodent_phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic tree with 285 species — rodent_phylo","text":"","code":"rodent_phylo"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/rodent_phylo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylogenetic tree with 285 species — rodent_phylo","text":"Newick phylogenetic tree","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/toy_treeEx.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypothetical phylogenetic tree — toy_treeEx","title":"Hypothetical phylogenetic tree — toy_treeEx","text":"made data simulates phylogenetic tree newick format. tree contains five species annotations node corresponds occurrence area ancestors","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/toy_treeEx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypothetical phylogenetic tree — toy_treeEx","text":"","code":"toy_treeEx"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/toy_treeEx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hypothetical phylogenetic tree — toy_treeEx","text":"newick phylogenetic tree 5 species","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Trait on foraging strata for small rodent — trait","title":"Trait on foraging strata for small rodent — trait","text":"Character vector indicating foraging strata 214 species small rodents","code":""},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trait on foraging strata for small rodent — trait","text":"","code":"trait"},{"path":"https://gabrielnakamura.github.io/Herodotools/reference/trait.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trait on foraging strata for small rodent — trait","text":"character vector three categories: Ar Arboreal G Ground level S Scansorial","code":""}]
